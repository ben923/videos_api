version: '3'
services: 
  web:
    build: .
    command: 'node server.js'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      NODE_APP_DEBUG: 'info'
    ports:
      - '2048:2048'
    volumes:
      - './videos_api:/var/app'
    links: 
      - elasticsearch
  postgres:
    image: postgres:9
    volumes:
      - './database:/docker-entrypoint-initdb.d/'
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=videos
    healthcheck:
        test: [ "CMD", "pg_isready", "-q", "-d", "videos", "-U", "postgres" ]
        timeout: 45s
        interval: 10s
        retries: 3
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.seed_hosts=0.0.0.0,elasticsearch
      - discovery.type=single-node
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        interval: 10s
        timeout: 45s
        retries: 3
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'
  redis:
    image: redis:latest
    volumes:
      - ./redis/redis.conf:/opt/bitnami/redis/mounted-etc/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30